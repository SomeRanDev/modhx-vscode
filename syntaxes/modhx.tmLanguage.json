




{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "modhx",
	"patterns": [
		{
			"include": "#section"
		},
		{
			"include": "#comments"
		},
		{
			"include": "#strings"
		},
		{
			"include": "#entry"
		}
	],
	"repository": {
		"section": {
			"patterns": [{
				"name": "keyword.control.modhx",
				"match": "\\[[_a-zA-Z][a-zA-Z0-9_\\.]*\\]"
			}]
		},
		"comments": {
			"patterns": [{
				"name": "comment.line.modhx",
				"match": "\\#.*$"
			}]
		},
		"strings": {
			"patterns": [
				{
					"name": "string.quoted.double.modhx",

					"begin": "^(s)(\\.)([a-zA-Z_][a-zA-Z0-9_]*)\\s*(:)\\s*\"",
					"beginCaptures": {
						"1": {
							"name": "storage.type.primitive.modhx"
						},
						"2": {
							"name": "keyword.operator.modhx"
						},
						"3": {
							"name": "entity.name.function.modhx"
						},
						"4": {
							"name": "keyword.operator.assignment.modhx"
						},
						"5": {
							"name": "constant.language.modhx"
						}
					},

					"end": "\"",

					"patterns": [
						{
							"name": "constant.character.escape.modhx",
							"match": "\\\\."
						}
					]
				}
			]
		},
		"entry": {
			"patterns": [
				{
					"name": "source.modhx.entry.bool",

					"begin": "^(b)(\\.)([a-zA-Z_][a-zA-Z0-9_]*)\\s*(:)\\s*(true|false)\\s*(#.*)?\\s*$",
					"beginCaptures": {
						"1": {
							"name": "storage.type.primitive.modhx"
						},
						"2": {
							"name": "keyword.operator.modhx"
						},
						"3": {
							"name": "entity.name.function.modhx"
						},
						"4": {
							"name": "keyword.operator.assignment.modhx"
						},
						"5": {
							"name": "constant.language.modhx"
						},
						"6": {
							"name": "comment.line.modhx"
						}
					},

					"end": "$"
				},
				{
					"name": "source.modhx.entry.int",

					"begin": "^(i)(\\.)([a-zA-Z_][a-zA-Z0-9_]*)\\s*(:)\\s*(-?[0-9]+)\\s*(#.*)?\\s*$",
					"beginCaptures": {
						"1": {
							"name": "storage.type.primitive.modhx"
						},
						"2": {
							"name": "keyword.operator.modhx"
						},
						"3": {
							"name": "entity.name.function.modhx"
						},
						"4": {
							"name": "keyword.operator.assignment.modhx"
						},
						"5": {
							"name": "constant.language.modhx"
						},
						"6": {
							"name": "comment.line.modhx"
						}
					},

					"end": "$"
				},
				{
					"name": "source.modhx.entry.float",

					"begin": "^(f)(\\.)([a-zA-Z_][a-zA-Z0-9_]*)\\s*(:)\\s*(-?[0-9]+(?:\\.[0-9]+)?)\\s*(#.*)?\\s*$",
					"beginCaptures": {
						"1": {
							"name": "storage.type.primitive.modhx"
						},
						"2": {
							"name": "keyword.operator.modhx"
						},
						"3": {
							"name": "entity.name.function.modhx"
						},
						"4": {
							"name": "keyword.operator.assignment.modhx"
						},
						"5": {
							"name": "constant.language.modhx"
						},
						"6": {
							"name": "comment.line.modhx"
						}
					},

					"end": "$"
				},
				{
					"name": "source.modhx.entry.enum",

					"begin": "^(e)(\\.)([a-zA-Z_][a-zA-Z0-9_]*)\\s*(:)\\s*([a-zA-Z_][a-zA-Z0-9_]*)\\s*(#.*)?\\s*$",
					"beginCaptures": {
						"1": {
							"name": "storage.type.primitive.modhx"
						},
						"2": {
							"name": "keyword.operator.modhx"
						},
						"3": {
							"name": "entity.name.function.modhx"
						},
						"4": {
							"name": "keyword.operator.assignment.modhx"
						},
						"5": {
							"name": "constant.language.modhx"
						},
						"6": {
							"name": "comment.line.modhx"
						}
					},

					"end": "$"
				}
			]
		}
	},
	"scopeName": "source.modhx"
}
